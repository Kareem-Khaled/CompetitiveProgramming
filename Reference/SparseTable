struct sparceTable{
    int Log = 20;
    vector<vector<ll>> table;
    ll merge(ll a, ll b){
        return gcd(a, b);
    }
    sparceTable(int n, vector<int> &arr){
        table = vector<vector<ll>> (n + 1, vector<ll>(Log));
        for(int i = 0; i < n; i++){
            table[i][0] = arr[i];
        }
        for(int pw = 1; (1 << pw) <= n; pw++){
            for(int i = 0; i + (1 << pw) <= n; i++){
                ll nxt = table[i + (1 << (pw - 1))][pw - 1];
                table[i][pw] = merge(table[i][pw - 1], nxt);
            }
        }
    }
    ll get(int l, int r){
        //int Log = log2(r - l + 1);
        //return merge(table[l][Log], table[r - (1 << Log) + 1][Log]);
        int len = r - l + 1;
        ll ret = 0;
        for(int pw = Log - 1; pw > -1; pw--){
            if(len & (1 << pw)){
                ret = merge(ret, table[l][pw]);
                l += (1 << pw);
            }
        }
        return ret;
    }
};
