		for (int i = 2; i <= n; i++) {
		// the middle 
			l.top();
		// next to push nxt
			ll nxt; // nxt = any value
			if (l.top() < nxt)
				r.push(-nxt);
			else
				l.push(nxt);

			while (r.size() > l.size())
				l.push(-r.top()), r.pop();

			while (l.size() > r.size() + 1)
				r.push(-l.top()), l.pop();
		}
// another samble
for (int i = 2; i <= n; i++) {
			ll cur = ((a * l.top()) % mod + (b * i) % mod + c) % mod;
			sum += cur;
			if (sz(l) > sz(r))
				r.push(-cur);
			else
				l.push(cur);
			if (sz(l) && sz(r) && l.top() > -r.top()) {
				l.push(-r.top()); r.pop();
				r.push(-l.top()); l.pop();
			}
		}