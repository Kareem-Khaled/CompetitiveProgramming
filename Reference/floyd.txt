// floyd to get All Pairs Shortest path

int n; vector<vector<ll>>adjL;
void floyd(){
	for (int k = 1; k <= n; k++){
		for (int i = 1; i <= n; i++){
			for (int j = 1; j <= n; j++)
				adjL[i][j] = min(adjL[i][j], adjL[i][k] + adjL[k][j]);
		}
	}
}
int main(){
	int t; cin >> t;
	for (int k = 1; k <= t; k++){
		int m; cin >> n >> m;
		adjL = vector<vector<ll>>(n + 1, vector<ll>(n + 1, oo));
		
		for (int i = 1; i <= n; i++)
			 adjL[i][i] = 0;
		
		while (m--){
			int u, v, w; cin >> u >> v >> w;
			adjL[u][v] = w; adjL[v][u] = w;
		}
}