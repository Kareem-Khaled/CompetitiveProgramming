//Merge Sort

ll cnt=0;
vector<int>vec,a;
void mergee(int start,int mid,int end)
{
    for(int i=start;i<=end;i++)
    {
        vec[i]=a[i];
    }
    int i=start,j=mid+1,k=start;
    while( i<=mid && j<=end )
    {
        if( vec[i]<=vec[j] )
        {
            a[k++]=vec[i++];
        }
        else
        {
            a[k++]=vec[j++];
            cnt+=j-k;
        }
    }
    while(i<=mid)
    {
        a[k++]=vec[i++];
    }
 
 
}
 
void mergesort(int l,int r){
if(l<r)
{
   int m=(l+r)/2;
   mergesort(l,m);
   mergesort(m+1,r);
   mergee(l,m,r);
}
 
 
 
}
 
 
int main()
{
    file();
    //fast();
 
int n,t;
cin>>t;
while(t--){
cin>>n;
a.resize(n);
vec.resize(n);
for(int i=0;i<n;i++)
{
    cin>>a[i];
}
cnt=0;
mergesort(0,n-1);
cout<<cnt<<endl;
}
 
}