maximum-Subarray
int n; vector<int>arr;
int sol(int l, int m, int r){
	int sum = 0;
	int leftSum = -oo;
	for (int i = m; i >= l; i--){
		sum += arr[i];
		leftSum = max(leftSum, sum);
	}
	sum = 0;
	int rightSum = -oo;
	for (int i = m + 1; i <= r; i++){
		sum += arr[i];
		rightSum = max(rightSum, sum);
	}
	return max({ leftSum + rightSum, leftSum, rightSum });
}
int merge(int l, int r){
	if (l == r)
		return arr[l];
	int m = (l + r) >> 1;
	int ch1 = merge(l, m);
	int ch2 = merge(m + 1, r);
	int ch3 = sol(l, m, r);
	return max({ ch1, ch2, ch3 });
}